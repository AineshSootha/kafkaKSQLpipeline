version: '3'
services: 
    db:
        image: mysql:latest
        restart: always
        environment:
            MYSQL_DATABASE: 'pythonTest'
            MYSQL_USER: 'root'
            MYSQL_PASSWORD: 'password'
            MYSQL_ROOT_PASSWORD: 'password'
        ports:
            - '3306:3306'
        expose:
            - '3306'
        volumes:
            - db:/var/lib/mysql

    zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
    
    kafka:
        image: wurstmeister/kafka
        container_name: kafka
        ports: 
            - "9092:9092"
        environment: 
            KAFKA_ADVERTISED_HOST_NAME: localhost
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_CREATE_TOPICS: "topic_test:1:1"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    broker:
        image: confluentinc/cp-enterprise-kafka:5.5.1
        hostname: broker
        container_name: broker
        depends_on:
            - zookeeper
        ports:
            - "29092:29092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    
    ksqldb-server:
        image: confluentinc/ksqldb-server:0.11.0
        hostname: localhost
        container_name: ksqldb-server
        depends_on:
            - broker
        ports:
            - "8088:8088"
        environment:
            KSQL_LISTENERS: http://localhost:8088
            KSQL_BOOTSTRAP_SERVERS: broker:8088
            KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
            KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
    
    ksqldb-cli:
        image: confluentinc/ksqldb-cli:0.11.0
        container_name: ksqldb-cli
        depends_on:
            - broker
            - ksqldb-server
        entrypoint: /bin/sh
        tty: true

volumes:
    db: